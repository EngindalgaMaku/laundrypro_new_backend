generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String   @map("password_hash")
  firstName    String   @map("first_name")
  lastName     String   @map("last_name")
  phone        String?
  role         String   @default("employee")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  assignedOrders Order[] @relation("AssignedUser")

  @@map("users")
}

model Customer {
  id           String   @id @default(cuid())
  firstName    String   @map("first_name")
  lastName     String   @map("last_name")
  email        String?
  phone        String
  address      String?
  customerType String   @default("individual") @map("customer_type")
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  orders Order[]

  @@map("customers")
}

model Service {
  id          String    @id @default(cuid())
  name        String
  description String?
  basePrice   Decimal   @map("base_price") @db.Decimal(10, 2)
  unit        String    @default("piece")
  category    String?
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  orderItems OrderItem[]

  @@map("services")
}

model Order {
  id                   String    @id @default(cuid())
  orderNumber          String    @unique @map("order_number")
  customerId           String    @map("customer_id")
  assignedUserId       String?   @map("assigned_user_id")
  status               String    @default("pending")
  priority             String    @default("normal")
  pickupDate           DateTime? @map("pickup_date") @db.Date
  deliveryDate         DateTime? @map("delivery_date") @db.Date
  subtotal             Decimal   @default(0) @db.Decimal(10, 2)
  taxAmount            Decimal   @default(0) @map("tax_amount") @db.Decimal(10, 2)
  totalAmount          Decimal   @default(0) @map("total_amount") @db.Decimal(10, 2)
  paymentStatus        String    @default("pending") @map("payment_status")
  paymentMethod        String?   @map("payment_method")
  notes                String?   @db.Text
  createdAt            DateTime  @default(now()) @map("created_at")
  updatedAt            DateTime  @updatedAt @map("updated_at")

  customer     Customer    @relation(fields: [customerId], references: [id], onDelete: Cascade)
  assignedUser User?       @relation("AssignedUser", fields: [assignedUserId], references: [id])
  orderItems   OrderItem[]

  @@map("orders")
}

model OrderItem {
  id         String   @id @default(cuid())
  orderId    String   @map("order_id")
  serviceId  String   @map("service_id")
  quantity   Decimal  @db.Decimal(10, 2)
  unitPrice  Decimal  @map("unit_price") @db.Decimal(10, 2)
  totalPrice Decimal  @map("total_price") @db.Decimal(10, 2)
  notes      String?  @db.Text
  createdAt  DateTime @default(now()) @map("created_at")

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  service Service @relation(fields: [serviceId], references: [id])

  @@map("order_items")
}
